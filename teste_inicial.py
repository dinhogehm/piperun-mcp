"""
Teste inicial para verificar a integra√ß√£o com a API do PipeRun.
Este script ajuda a confirmar se a configura√ß√£o est√° correta e se a API est√° respondendo.
"""
import json
from dotenv import load_dotenv

# Importa as ferramentas que ser√£o testadas
from src.tools import (
    list_companies,
    list_contacts,
    list_deals,
    list_pipelines,
)


def print_resultado(titulo, resultado):
    """Imprime um resultado de forma organizada."""
    print(f"\n=== {titulo} ===")
    if resultado.get("success"):
        print("‚úÖ Sucesso!")
        if "items" in resultado:
            itens = resultado.get("items", [])
            print(f"Itens encontrados: {len(itens)}")
            
            # Mostra at√© 3 itens de exemplo
            if itens:
                print("\nExemplos:")
                for item in itens[:3]:
                    if "name" in item:
                        print(f" - {item.get('id')}: {item.get('name')}")
                    elif "title" in item:
                        print(f" - {item.get('id')}: {item.get('title')}")
    else:
        print("‚ùå Falha!")
        print(f"Mensagem: {resultado.get('message', 'Erro n√£o especificado')}")


def main():
    """Fun√ß√£o principal que executa os testes."""
    # Carrega as vari√°veis de ambiente do arquivo .env
    load_dotenv()
    
    print("üîç Iniciando testes com a API do PipeRun...\n")
    
    # Teste direto com a listagem de empresas
    print("Testando acesso √† API do PipeRun...")
    
    # Teste 1: Lista empresas
    resultado_empresas = list_companies(per_page=5)
    print_resultado("Listando empresas", resultado_empresas)
    
    if resultado_empresas.get("success"):
        # Se o teste de empresas funcionou, continua com os outros testes
        
        # Teste 2: Lista contatos
        print_resultado(
            "Listando contatos", 
            list_contacts(per_page=5)
        )
        
        # Teste 3: Lista oportunidades
        print_resultado(
            "Listando oportunidades", 
            list_deals(per_page=5)
        )
        
        # Teste 4: Lista funis
        print_resultado(
            "Listando funis", 
            list_pipelines()
        )
        
        print("\n‚ú® Testes conclu√≠dos! A integra√ß√£o est√° funcionando corretamente.")
    else:
        print("\n‚ùå Falha ao acessar a API do PipeRun.")
        print("Verifique se o token est√° correto e se a URL base da API est√° configurada corretamente.")
        print("Confira tamb√©m se voc√™ tem permiss√£o para acessar as informa√ß√µes da API.")


if __name__ == "__main__":
    main()
